---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: inference-gateway-operator
    app.kubernetes.io/name: operator
    app.kubernetes.io/managed-by: kustomize
  name: inference-gateway-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inference-gateway
  namespace: inference-gateway-system
  labels:
    control-plane: inference-gateway-operator
    app.kubernetes.io/name: operator
    app.kubernetes.io/managed-by: kustomize
spec:
  selector:
    matchLabels:
      control-plane: inference-gateway-operator
      app.kubernetes.io/name: operator
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: operator
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
      labels:
        control-plane: inference-gateway-operator
        app.kubernetes.io/name: operator
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - arm64
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: operator
          image: ghcr.io/inference-gateway/operator:latest
          imagePullPolicy: IfNotPresent
          args:
            - --leader-elect
            - --health-probe-bind-address=:8081
            - --metrics-bind-address=:9090
            - --zap-log-level=info
            - --zap-encoder=json
          env:
            - name: WATCH_NAMESPACE_SELECTOR
              value: "inference-gateway.com/managed=true"
          ports:
            - containerPort: 9090
              name: metrics
              protocol: TCP
            - containerPort: 8081
              name: health
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - "ALL"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 1000m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts: []
      volumes: []
      serviceAccountName: inference-gateway
      terminationGracePeriodSeconds: 10
