name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
  pull_request:
    paths-ignore:
      - "**.md"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  TASK_VERSION: "v3.44.1"
  GOLANGCI_LINT_VERSION: "v2.1.6"
  CONTROLLER_GEN_VERSION: "v0.17.2"
  KUSTOMIZE_VERSION: "v5.6.0"

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-24.04
    steps:
      - name: Clone the code
        uses: actions/checkout@v4.2.2

      - name: Setup Go
        uses: actions/setup-go@v5.5.0
        with:
          go-version-file: go.mod
          cache: true

      - name: Install task
        run: |
          curl -s https://taskfile.dev/install.sh | sh -s -- -b /usr/local/bin ${{ env.TASK_VERSION }}

      - name: Install golangci-lint
        run: |
          go install github.com/golangci/golangci-lint/v2/cmd/golangci-lint@${{ env.GOLANGCI_LINT_VERSION }}
          golangci-lint --version || (echo "golangci-lint not installed" && exit 1)

      - name: Run linter
        run: task lint

  generate:
    name: Generate & Verify Clean State
    runs-on: ubuntu-24.04
    steps:
      - name: Clone the code
        uses: actions/checkout@v4.2.2

      - name: Setup Go
        uses: actions/setup-go@v5.5.0
        with:
          go-version-file: go.mod
          cache: true

      - name: Setup Node.js
        uses: actions/setup-node@v4.4.0
        with:
          node-version: "lts/*"

      - name: Install task
        run: |
          curl -s https://taskfile.dev/install.sh | sh -s -- -b /usr/local/bin ${{ env.TASK_VERSION }}

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b /usr/local/bin ${{ env.GOLANGCI_LINT_VERSION }}

      - name: Install Controllergen
        run: |
          go install sigs.k8s.io/controller-tools/cmd/controller-gen@${{ env.CONTROLLER_GEN_VERSION }}

      - name: Install Kustomize
        run: |
          go install sigs.k8s.io/kustomize/kustomize/v5@${{ env.KUSTOMIZE_VERSION }}

      - name: Tidy Go modules
        run: go mod tidy

      - name: Run code generation
        run: task generate

      - name: Run manifest generation
        run: task manifests

      - name: Run formatting
        run: task fmt

      - name: Check for dirty state
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "❌ Working directory is dirty after running generate, manifests, and fmt tasks:"
            git status --porcelain
            echo ""
            echo "Please run the following commands locally and commit the changes:"
            echo "  go mod tidy"
            echo "  task generate"
            echo "  task manifests" 
            echo "  task fmt"
            echo ""
            echo "Diff:"
            git diff
            exit 1
          else
            echo "✅ Working directory is clean - all generated files are up to date"
          fi

  build:
    name: Build
    runs-on: ubuntu-24.04
    steps:
      - name: Clone the code
        uses: actions/checkout@v4.2.2

      - name: Setup Go
        uses: actions/setup-go@v5.5.0
        with:
          go-version-file: go.mod
          cache: true

      - name: Setup Node.js
        uses: actions/setup-node@v4.4.0
        with:
          node-version: "lts/*"

      - name: Install task
        run: |
          curl -s https://taskfile.dev/install.sh | sh -s -- -b /usr/local/bin ${{ env.TASK_VERSION }}

      - name: Install Controllergen
        run: |
          go install sigs.k8s.io/controller-tools/cmd/controller-gen@${{ env.CONTROLLER_GEN_VERSION }}

      - name: Install Kustomize
        run: |
          go install sigs.k8s.io/kustomize/kustomize/v5@${{ env.KUSTOMIZE_VERSION }}

      - name: Verify dependencies installed
        run: |
          task --version || (echo "task not installed" && exit 1)
          controller-gen --version || (echo "controller-gen not installed" && exit 1)
          kustomize version || (echo "kustomize not installed" && exit 1)
          prettier --version || (echo "prettier not installed" && exit 1)

      - name: Tidy Go modules
        run: go mod tidy

      - name: Run build
        run: task build
